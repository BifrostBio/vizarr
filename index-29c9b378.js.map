{"version":3,"file":"index-29c9b378.js","sources":["../node_modules/reference-spec-reader/src/render.js","../node_modules/reference-spec-reader/src/parse.js","../node_modules/reference-spec-reader/src/store.js"],"sourcesContent":["// @ts-check\n/// <reference lib=\"esnext\" />\n\n/**\n * @param {string} template\n * @param {RegExp=} re\n */\nfunction parse(template, re = /{{(.*?)}}/) {\n  let result = re.exec(template);\n  const parts = [];\n  let pos;\n\n  while (result) {\n    pos = result.index;\n    if (pos !== 0) {\n      parts.push({ match: false, str: template.substring(0, pos) });\n      template = template.slice(pos);\n    }\n    parts.push({ match: true, str: result[0] });\n    template = template.slice(result[0].length);\n    result = re.exec(template);\n  }\n\n  if (template) {\n    parts.push({ match: false, str: template });\n  }\n\n  return parts;\n}\n\n/** @param {string} str */\nfunction matchFn(str) {\n  const match = str.match(/(?<fname>[A-Z_][A-Z_1-9]*)\\((?<args>[^)]+)\\)/i);\n  if (!match?.groups) return;\n\n  const { fname, args } = match.groups;\n  const ctx = Object.fromEntries(\n    args.split(',').map(kwarg => {\n      const { key, num, str } =\n        kwarg.match(/(?<key>[a-z_0-9]*)\\s*=\\s*((?<num>[0-9.]+)|('|\")(?<str>.*)('|\"))/i)?.groups ?? {};\n      if (!key || !(num || str)) {\n        throw Error(`Failed to match fn kwarg: ${kwarg}`);\n      }\n      return [key, num ? Number(num) : str];\n    }),\n  );\n\n  return { fname, ctx };\n}\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz';\nconst numbers = '01234569789';\nconst expr = '()*/+-';\nconst space = ' ';\nconst valid = new Set(alphabet + alphabet.toUpperCase() + numbers + expr + space);\n/** @param {string} str */\nfunction matchMathEval(str) {\n  for (let i = 0; i < str.length; i++) {\n    if (!valid.has(str.charAt(i))) return;\n  }\n  return parse(str, /[A-Za-z_][A-Za-z0-9_]*/gi);\n}\n\n/** @type {import('../types').RenderFn} */\nexport function render(template, context) {\n  const grps = parse(template);\n  return grps\n    .map(grp => {\n      if (!grp.match) {\n        return grp.str;\n      }\n\n      let inner = grp.str.split(/{{|}}/).filter(Boolean)[0].trim();\n      if (inner in context) {\n        return context[inner];\n      }\n\n      const fnMatch = matchFn(inner);\n      if (fnMatch) {\n        const { fname, ctx } = fnMatch;\n        const fn = context[fname];\n        if (typeof fn === 'function') {\n          return fn(ctx);\n        }\n        throw Error(`Cannot find function named ${fname} in rendering context.`);\n      }\n\n      const matches = matchMathEval(inner);\n      if (matches) {\n        const exprParts = matches.map(match => {\n          if (!match.match) return match.str;\n          const value = context[match.str];\n          if (value == null) {\n            throw Error(`Cannot find number named ${match.str} in rendering context.`);\n          }\n          if (typeof value !== 'number') {\n            throw Error(`The provided value for ${match.str} must be a number.`);\n          }\n          return value;\n        });\n        return Function('\"use strict\";return (' + exprParts.join('') + ')')();\n      }\n\n      throw new Error(`Unable to match ${grp.str}`);\n    })\n    .join('');\n}\n","// @ts-check\n/// <reference lib=\"esnext\" />\n\nimport { render } from './render.js';\n\n/**\n * @param {import('../types').ReferencesV0 | import('../types').ReferencesV1} spec\n * @param {import('../types').RenderFn=} renderString\n */\nexport function parse(spec, renderString = render) {\n  // @ts-ignore\n  return 'version' in spec ? parseV1(spec, renderString) : parseV0(spec);\n}\n\n/**\n * @param {import('../types').ReferencesV0} spec\n * @returns {Map<string, import('../types').Ref>}\n */\nfunction parseV0(spec) {\n  return new Map(Object.entries(spec));\n}\n\n/**\n * @param {import('../types').ReferencesV1} spec\n * @param {import('../types').RenderFn} renderString\n * @returns {Map<string, import('../types').Ref>}\n */\nfunction parseV1(spec, renderString) {\n  /** @type {import('../types').RenderContext} */\n  const context = {};\n  for (const [key, template] of Object.entries(spec.templates ?? {})) {\n    // TODO: better check for whether a template or not\n    if (template.includes('{{')) {\n      // Need to register filter in environment\n      context[key] = ctx => renderString(template, ctx);\n    } else {\n      context[key] = template;\n    }\n  }\n\n  /** @type {(t: string, o?: Record<string, string | number>) => string} */\n  const render = (t, o) => {\n    return renderString(t, { ...context, ...o });\n  };\n\n  /** @type {Map<string, import('../types').Ref>} */\n  const refs = new Map();\n\n  for (const [key, ref] of Object.entries(spec.refs ?? {})) {\n    if (typeof ref === 'string') {\n      refs.set(key, ref);\n    } else {\n      const url = ref[0]?.includes('{{') ? render(ref[0]) : ref[0];\n      refs.set(key, ref.length === 1 ? [url] : [url, ref[1], ref[2]]);\n    }\n  }\n\n  for (const g of spec.gen ?? []) {\n    for (const dims of iterDims(g.dimensions)) {\n      const key = render(g.key, dims);\n      const url = render(g.url, dims);\n      if (g.offset && g.length) {\n        // [url, offset, length]\n        const offset = render(g.offset, dims);\n        const length = render(g.length, dims);\n        refs.set(key, [url, parseInt(offset), parseInt(length)]);\n      } else {\n        // [url]\n        refs.set(key, [url]);\n      }\n    }\n  }\n\n  return refs;\n}\n\n/**\n * @param {Record<string, import('../types').Range | number[]>} dimensions\n * @returns {Generator<Record<string, number>>}\n */\nfunction* iterDims(dimensions) {\n  const keys = Object.keys(dimensions);\n  const iterables = Object.values(dimensions).map(i => (Array.isArray(i) ? i : [...range(i)]));\n  for (const values of product(...iterables)) {\n    yield Object.fromEntries(keys.map((key, i) => [key, values[i]]));\n  }\n}\n\n/** @param {...any[]} iterables */\nfunction* product(...iterables) {\n  if (iterables.length === 0) {\n    return;\n  }\n  // make a list of iterators from the iterables\n  const iterators = iterables.map(it => it[Symbol.iterator]());\n  const results = iterators.map(it => it.next());\n  if (results.some(r => r.done)) {\n    throw new Error('Input contains an empty iterator.');\n  }\n  for (let i = 0; ; ) {\n    if (results[i].done) {\n      // reset the current iterator\n      iterators[i] = iterables[i][Symbol.iterator]();\n      results[i] = iterators[i].next();\n      // advance, and exit if we've reached the end\n      if (++i >= iterators.length) {\n        return;\n      }\n    } else {\n      yield results.map(({ value }) => value);\n      i = 0;\n    }\n    results[i] = iterators[i].next();\n  }\n}\n\n/** @param {import('../types').Range} rng */\nfunction* range({ stop, start = 0, step = 1 }) {\n  for (let i = start; i < stop; i += step) {\n    yield i;\n  }\n}\n","// @ts-check\n/// <reference lib=\"esnext\" />\n\nimport { parse } from './parse.js';\n\nclass KeyError extends Error {\n  __zarr__ = 'KeyError';\n  /** @param {string} msg */\n  constructor(msg) {\n    super(msg);\n    this.name = 'KeyError';\n  }\n}\n\nexport class ReferenceStore {\n  /**\n   * @param {Map<string, import('../types').Ref>} references\n   * @param {{ target?: string }=} opts\n   */\n  constructor(references, opts = {}) {\n    this.ref = references;\n    this.target = opts.target;\n  }\n\n  /**\n   * @param {string | import('../types').ReferencesV0 | import('../types').ReferencesV1} data\n   * @param {{\n   *   target?: string;\n   *   renderString?: import('../types').RenderFn;\n   * }=} opts\n   */\n  static fromJSON(data, opts = {}) {\n    const spec = typeof data === 'string' ? JSON.parse(data) : data;\n    const ref = parse(spec, opts.renderString);\n    return new ReferenceStore(ref, opts);\n  }\n\n  /** @param {string} url */\n  _url(url) {\n    const [protocol, path] = url.split('://');\n    if (protocol === 'https' || protocol === 'http') {\n      return url;\n    }\n    if (protocol === 'gc') {\n      return `https://storage.googleapis.com/${path}`;\n    }\n    if (protocol === 's3') {\n      return `https://s3.amazonaws.com/${path}`;\n    }\n    throw Error('Protocol not supported, got: ' + JSON.stringify(protocol));\n  }\n\n  /**\n   * @param {{ url: string, offset?: number, size?: number }} props\n   * @param {RequestInit} opts\n   */\n  _fetch({ url, offset, size }, opts) {\n    if (offset !== undefined && size !== undefined) {\n      // add range headers to request options\n      opts = { ...opts, headers: { ...opts.headers, Range: `bytes=${offset}-${offset + size - 1}` } };\n    }\n    return fetch(this._url(url), opts);\n  }\n\n  /**\n   * @param {string} key\n   * @param {RequestInit} opts\n   */\n  async getItem(key, opts = {}) {\n    const entry = this.ref.get(key);\n\n    if (!entry) {\n      throw new KeyError(key);\n    }\n\n    if (typeof entry === 'string') {\n      if (entry.startsWith('base64:')) {\n        return __toBinary(entry.slice(7)).buffer;\n      }\n      return __encoder.encode(entry).buffer;\n    }\n\n    const [urlOrNull, offset, size] = entry;\n    const url = urlOrNull ?? this.target;\n    if (!url) {\n      throw Error(`No url for key ${key}, and no target url provided.`);\n    }\n    const res = await this._fetch({ url, offset, size }, opts);\n\n    if (res.status === 200 || res.status === 206) {\n      return res.arrayBuffer();\n    }\n\n    throw new Error(`Request unsuccessful for key ${key}. Response status: ${res.status}.`);\n  }\n\n  /** @param {string} key */\n  async containsItem(key) {\n    return this.ref.has(key);\n  }\n\n  async keys() {\n    return [...this.ref.keys()];\n  }\n\n  /**\n   * @param {string} key\n   * @param {ArrayBuffer} value\n   * @returns {never}\n   */\n  setItem(key, value) {\n    throw Error('FileReferenceStore.setItem is not implemented.');\n  }\n\n  /**\n   * @param {string} key\n   * @returns {never}\n   */\n  deleteItem(key) {\n    throw Error('FileReferenceStore.deleteItem is not implemented.');\n  }\n}\n\n/**\n * This is for the \"binary\" loader (custom code is ~2x faster than \"atob\") from esbuild.\n * https://github.com/evanw/esbuild/blob/150a01844d47127c007c2b1973158d69c560ca21/internal/runtime/runtime.go#L185\n * @type {(str: string) => Uint8Array}\n */\nconst __toBinary = (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++) table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  // @ts-ignore\n  return base64 => {\n    var n = base64.length;\n    // @ts-ignore\n    var bytes = new Uint8Array((((n - (base64[n - 1] == '=') - (base64[n - 2] == '=')) * 3) / 4) | 0);\n    for (var i = 0, j = 0; i < n; ) {\n      var c0 = table[base64.charCodeAt(i++)],\n        c1 = table[base64.charCodeAt(i++)];\n      var c2 = table[base64.charCodeAt(i++)],\n        c3 = table[base64.charCodeAt(i++)];\n      bytes[j++] = (c0 << 2) | (c1 >> 4);\n      bytes[j++] = (c1 << 4) | (c2 >> 2);\n      bytes[j++] = (c2 << 6) | c3;\n    }\n    return bytes;\n  };\n})();\n\nconst __encoder = new TextEncoder();\n"],"names":["parse","template","re","result","parts","pos","matchFn","str","match","fname","args","ctx","kwarg","_a","key","num","alphabet","numbers","expr","space","valid","matchMathEval","i","render","context","grp","inner","fnMatch","fn","matches","exprParts","value","spec","renderString","parseV1","parseV0","t","refs","ref","url","g","dims","iterDims","offset","length","dimensions","keys","iterables","range","values","product","iterators","it","results","r","stop","start","step","KeyError","msg","__publicField","ReferenceStore","references","opts","data","protocol","path","size","entry","__toBinary","__encoder","urlOrNull","res","table","base64","n","bytes","j","c0","c1","c2","c3"],"mappings":"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","x_google_ignoreList":[0,1,2]}